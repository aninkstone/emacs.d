#+STARTUP: showall
#+STARTUP: hidestars
#+HTML: <script src="template/js/jquery-1.11.2.min.js"></script>
#+HTML: <script src="template/js/org-emitx.js"></script>
#+HTML: <script src="bootstrap/js/bootstrap.min.js"></script>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="bootstrap/css/bootstrap.min.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="bootstrap/css/bootstrap-responsive.min.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="template/css/org.css"/>
#+SETUPFILE: ../orgcss/level-0.orgcss

* 周会
** <2015-01-26 周一>
   | Member | Last Week      | This Week | Comment | Others |
   |--------+----------------+-----------+---------+--------|
   | 陈作鹏 | 15RC SRC Merge | nohting   | ss      | dda    |
   | 韩菲   | Test           | test      | 1       | 299    |
   | 韩菲   | Test           | test      | 1       | 299    |
   | 韩菲   | Test           | test      | 1       | 299    |
   | 韩菲   | Test           | test      | 1       | 299    |
   | 韩菲   | Test           | test      | 1       | 299    |
   | 韩菲   | Test           | test      | 1       | 299    |
   

** Test
   | Value | LastWeek               | This Week | Comment |   |
   |-------+------------------------+-----------+---------+---|
   | Chen  | 15RC source code Merge |           |         |   |

** Test Test
   #+BEGIN_SRC emacs-lisp
       (defun org-xor (a b)
          "Exclusive or."
          (if a (not b) b))
   #+END_SRC
** 当地球上没有人类
   #+BEGIN_SRC C
   #include	"drv_hardware.h"
   #include	"drv_intevt.h"  // all int number for drives
   #include	"iic_drv.h"
   #include	"iic_drv_local.h" // iic information define 

   #ifdef USER_ASSERT_ON
   #include	<assert.h>
   extern void abort(void);
   #endif

   /********************** local variable *****************************/
   static	volatile	B	*tIIC_reg[ IIC_CH_MAX ][ 9 ];			//
   #+END_SRC
*** This is a sample
** 当地球上没有人类
*** This is a sample
   #+BEGIN_SRC C
   #include	"drv_hardware.h"
   #include	"drv_intevt.h"  // all int number for drives
   #include	"iic_drv.h"
   #include	"iic_drv_local.h" // iic information define 

   #ifdef USER_ASSERT_ON
   #include	<assert.h>
   extern void abort(void);
   #endif

   /********************** local variable *****************************/
   static	volatile	B	*tIIC_reg[ IIC_CH_MAX ][ 9 ];			//
   #+END_SRC
** Test Test
*** This is a sample
   #+BEGIN_SRC C
   #include	"drv_hardware.h"
   #include	"drv_intevt.h"  // all int number for drives
   #include	"iic_drv.h"
   #include	"iic_drv_local.h" // iic information define 

   #ifdef USER_ASSERT_ON
   #include	<assert.h>
   extern void abort(void);
   #endif

   /********************** local variable *****************************/
   static	volatile	B	*tIIC_reg[ IIC_CH_MAX ][ 9 ];			//
   #+END_SRC
** Test Test
*** This is a sample
   #+BEGIN_SRC C
   #include	"drv_hardware.h"
   #include	"drv_intevt.h"  // all int number for drives
   #include	"iic_drv.h"
   #include	"iic_drv_local.h" // iic information define 

   #ifdef USER_ASSERT_ON
   #include	<assert.h>
   extern void abort(void);
   #endif

   /********************** local variable *****************************/
   static	volatile	B	*tIIC_reg[ IIC_CH_MAX ][ 9 ];			//
   #ifndef NDEBUG
   T_IIC_MEM		*IIC_obj = NULL;
   #else	//NDEBUG
   static	T_IIC_MEM	*IIC_obj = NULL;							//
   #endif	//NDEBUG
   
   #ifdef USER_MEM_POOL					//
   static  ID  mpfid;						//
   #else									//
   #ifdef USER_MEM_STATIC				//
   static  T_IIC_MEM	gIIC_obj;	//
   #endif								//
   #endif
   
   /******************** table define *********************************/
   static const T_CFLG gIIC_wflg = { TA_TFIFO | TA_WSGL | TA_CLR, 0};	// event flag
   
   static const UW NACKI_NUM[]   ={ IIC_INT_NUM_NAKI0, IIC_INT_NUM_NAKI1 ,IIC_INT_NUM_NAKI2,IIC_INT_NUM_NAKI3};//  number of nack interrupter channel 0 to channel 3
   static const UW STPI_NUM[] ={ IIC_INT_NUM_STPI0, IIC_INT_NUM_STPI1,IIC_INT_NUM_STPI2,IIC_INT_NUM_STPI3 };//  number of transfer stop interrupter channel 0 to channel 3
   static const UW RXI_NUM[] ={ IIC_INT_NUM_RXI0, IIC_INT_NUM_RXI1 ,IIC_INT_NUM_RXI2 , IIC_INT_NUM_RXI3};//  number of receive interrupter channel 0 to channel 3
   static const UW TXI_NUM[]  ={ IIC_INT_NUM_TXI0, IIC_INT_NUM_TXI1 ,IIC_INT_NUM_TXI2,IIC_INT_NUM_TXI3 };//  number of transfer interrupter channel 0 to channel 3
   static const UW TEI_NUM[] ={IIC_INT_NUM_TEI0 , IIC_INT_NUM_TEI1 ,IIC_INT_NUM_TEI2,IIC_INT_NUM_TEI3};//  number of transfer end interrupter channel 0 to channel 3
   static const FP NACKI_FUN[]	 ={ NACKI0, NACKI1,NACKI2,NACKI3 };  //   no ack interrupter function inport
   static const FP STPI_FUN[]  ={ STPI0, STPI1,STPI2,STPI3 };//   stop signal recognise interrupter function inport
   static const FP RXI_FUN[]  ={ RXI0, RXI1,RXI2,RXI3 };  //  receive interrupter function inport
   static const FP TXI_FUN[]   ={ TXI0,TXI1,TXI2,TXI3 };  //  transfer interrupter 
   static const FP TEI_FUN[]   ={TEI0,TEI1,TEI2,TEI3};   // transfer end interrupter 
   
   static const T_IIC_DRIVER_FUNCS driver_funcs = { // functions for driver
   {IIC_FAMILY_DRV, (0x1<<16 | 0x01), (0x1<<16 | 0x01), 0},
   drv_IIC_Pmoperation,
   drv_IIC_Init,
   drv_IIC_Quit,
   drv_IIC_Open,
   drv_IIC_Close,
   drv_IIC_Status,
   drv_IIC_WriteAsync,
   drv_IIC_ReadAsync,
   drv_IIC_Abort,
   drv_IIC_WriteRead
   };
   #+END_SRC
* 17MY Tasks
#+CATEGORY: 17MY
*** TODO <2014-12-17 周三> 17MY软件设计
   - State "TODO"       from "WAITING"    [2015-01-29 周四 14:24]
   - State "WAITING"    from "TODO"       [2015-01-08 周四 12:08] \\
  等待供给回答
*** DONE <2014-12-17 周三> 15LOW次期课题整理，哪些17MY要对应总结       :陈作鹏:
   CLOSED: [2015-01-26 周一 15:12]
   - CLOSING NOTE [2015-01-26 周一 15:12]
*** DONE <2014-12-25 周四> 单体测试检讨                                :陈作鹏:
   CLOSED: [2015-01-29 周四 14:17]
   - CLOSING NOTE [2015-01-29 周四 14:17]
*** DONE <2014-12-25 周四> 输出结果自动化调查                           :韩菲:
   CLOSED: [2015-01-08 周四 11:49]
   - CLOSING NOTE [2015-01-08 周四 11:49]
*** DONE <2014-12-26 周五> [17MY]开发计划及DR日程                      :陈作鹏:
   CLOSED: [2015-01-26 周一 15:12]
   - State "DONE"       from "HOLD"       [2015-01-26 周一 15:12]
- State "HOLD"       from "NEXT"       [2015-01-08 周四 11:53] \\
  等何纬伟对应
- CLOSING NOTE [2014-12-26 周五 16:21] \\
  ■前提：
  2/2　        機能仕様書の提供日
           (DAB、KA仕様以外)
  3/9　        各供給実装完了
  5/中　     各供給全機能実装
  
  ■問題：
  1．認証日程ない
  2．テストモード仕様・日程がない
  
  ■タスクリスト：
  基本設計         (日本語)
           基本設計仕様書作成
           ①基本設計仕様書内部DR
           基本設計仕様書修正
           基本設計仕様書翻訳
           ②基本設計仕様書外部DR
           基本設計仕様書修正
  DRBFM　                  (日本語、要件単位で、新規moduleはやりません)
           DRBFM作成
           ③DRBFM内部DR
           DRBFM修正
           DRBFM翻訳
           ④DRBFM外部DR
           DRBFM修正
  詳細設計         
           (SOCフォローチャートなし：単体テストはテストソースコードを入れ、自動的に実施、SYS既存関数フォローチャートなし)
           詳細設計仕様書作成
           ⑤詳細設計仕様書DR
           詳細設計仕様書修正
  Coding　
           コーディング
           ⑧コードDR
           コード修正
  単体テスト
           単体テスト仕様書作成
           ⑥単体テスト仕様書DR
           単体テスト仕様書修正
           単体テスト実施
           ⑨単体テスト結果DR
           単体テスト結果修正
  結合テスト
           結合テスト仕様書作成
           ⑦結合テスト仕様書DR
           結合テスト仕様書修正
           結合テスト実施
           ➉結合テスト結果DR
           結合テスト結果修正
  システムテスト(日本語)
           システムテスト仕様書作成
           ⑪システムテスト仕様書内部DR
           システムテスト仕様書修正
           システムテスト仕様書翻訳
           ⑫システムテスト仕様書外部DR
           システムテスト仕様書修正
           システムテスト実施
           ⑬システムテスト結果DR
           システムテスト結果修正
           システムテスト結果翻訳
           ⑭システムテスト結果DR
           システムテスト結果修正
  
  ※○付きの項目はDR実施順番です。
  
**** CANCELLED <2014-12-29 周一> coding rule展开              :陈作鹏:CANCELLED:
   CLOSED: [2015-01-26 周一 15:12]
   - State "CANCELLED"  from "DONE"       [2015-01-26 周一 15:12] \\
     16LOW TODO中追加
   - CLOSING NOTE [2015-01-26 周一 15:12]

**** DONE 17MY 屏幕颜色不正问题说明文档                                 :陈作鹏:
   CLOSED: [2015-02-03 周二 17:16] SCHEDULED: <2015-01-30 周五>
   - CLOSING NOTE [2015-02-03 周二 17:16] \\
     已登陆课题：14-571-5-00352
* 共通
#+CATEGORY: 共通
**** TODO <2015-01-04 周日> 李俊平邮件学习(大计划)                      :陈作鹏:
   - 前期检讨:要件明确，工数检讨，风险检讨 端子检讨，硬件需求明确（包括RAM/ROM预估），PD番号明确
   确认合试/再试release日程以及必须对应要件设计部依赖从这里开始会发过来，直接最后设计部依赖都是重
   要工作。明确base需要对应的次期课题变更硬件注意向设计确认相关spec

   - 开发计划:硬件日程明确后，确定软件大日程 各外部（包括供给）窗口日程明确，向供给发依赖（供给
   第一次提供代码时间根据合试release时间）有必要和相关部门确认定期开TV会议 和设计部确认认证日程，
   开发提出认证sample时间 合试，再试，TP实机台数发给设计确认 明确要件DR之后有哪些要件发生更改以
   及变更所带来的影响需要测试必备物品提前准备

   - 式样学习:式样书制作日程确认 式样书学习，式样QA越多越好，确保在Anyplace上QA 必要时要求式样组
   开会说明 式样确定后制作全机能实装计划，release详细计划 要求design提供各画面design提出计划 明确
   font提供日程

   - 硬件设计:以base成果物为基础，确认变更点制作设计书需要设计部修改或者确认的提前发给设计部需要
   哪些testmode向设计和生产部门确认硬件设计DR时，所有成果物和设计部说明确认

   - 软件设计:模块设计以base成果物为基础，确认变更点制作设计书开发内部确认按照之前制定的全机能实
   装计划完成全机能，包括source code review

   - 单体测试:按照式样做式样check，修改问题按照模块设计测试模块有时间的话做函数级别测试根据认证
   日程做自己认证测试, 所有testmode测试QAC检查

   - 合试review:向设计部说明未完成设计部依赖未对应评价中心来的指摘以及其他重大问题移行TP确定表示
   确认会时间修改表示确认会上指摘

   - 移管评价:向评价说明所有未解决问题，式样变更等等预计对应时间明确评价优先顺序

   - 综合测试:以base成果物为基础，确认变更点制作综合测试项目书timingchart测试结果要向设计部展开
   再做一次QAC检查

   - TPreview: 基本上所有硬件问题都已解决，软件至少SA bug0所有未完成pending明确原因以及对应预定时
   间所有判定不对应或者做成次期课题的项目需要登录Anyplace管理移行PP或者MP

   - bug0！最终DR

** My Table 
   #+ATTR_HTML: border="2" rules="all" frame="border"
   | column 1 | column 2 | column 3 |
   |        a |        b |        c |
   |      1.4 |      2.5 |      3.6 |
   |      1.4 |      2.5 |      3.6 |
